#include <iostream>
using namespace std;

class Product {
private:
    int prod_id;
    string prod_name;
    int stock;
    double gst;
    double discount;
    double productPrice;

public:
    Product(int prod_id, string prod_name, int stock, double gst, double discount, double productPrice) {
        this->prod_id = prod_id;
        this->prod_name = prod_name;
        this->stock = stock;
        this->gst = gst;
        this->discount = discount;
        this->productPrice = productPrice;
    }

    // Setters and getters
    void setProdId(int id) {
        prod_id = id;
    }

    int getProdId() {
        return prod_id;
    }

    void setProdName(string name) {
        prod_name = name;
    }

    string getProdName() {
        return prod_name;
    }

    void setStock(int s) {
        stock = s;
    }

    int getStock() {
        return stock;
    }

    void setGst(double g) {
        gst = g;
    }

    double getGst() {
        return gst;
    }

    void setDiscount(double d) {
        discount = d;
    }

    double getDiscount() {
        return discount;
    }

    void setProductPrice(double price) {
        productPrice = price;
    }

    double getProductPrice() {
        return productPrice;
    }

    void viewProduct() {
        cout << "Product ID: " << prod_id << endl;
        cout << "Product Name: " << prod_name << endl;
        cout << "Stock: " << stock << endl;
        cout << "GST: " << gst << endl;
        cout << "Discount: " << discount << endl;
        cout << "Product Price: " << productPrice << endl;
    }

    void checkStock() {
        if (stock > 0) {
            cout << "Available in stock." << endl;
        } else {
            cout << "Out of stock." << endl;
        }
    }
};

class PurchasedProduct {
private:
    int quantity;

public:
    PurchasedProduct(int quantity) {
        this->quantity = quantity;
    }

    void setQuantity(int q) {
        quantity = q;
    }

    int getQuantity() {
        return quantity;
    }

    double calculateGst(double productPrice, double gst) {
        return productPrice * gst;
    }

    double calculateDiscount(double productPrice, double discount) {
        return productPrice * discount;
    }

    double calculatePrice(double productPrice, double gst, double discount) {
        double totalPrice = productPrice + calculateGst(productPrice, gst);
        return totalPrice - calculateDiscount(totalPrice, discount);
    }
};

class Node {
private:
    PurchasedProduct *purchasedProduct;
    Node *next;

public:
    Node(PurchasedProduct *purchasedProduct) {
        this->purchasedProduct = purchasedProduct;
        this->next = nullptr;
    }
};

class LinkedList {
private:
    Node *head;

public:
    LinkedList() {
        this->head = nullptr;
    }

    void addNode(Node *newNode) {
        if (head == nullptr) {
            head = newNode;
        } else {
            Node *temp = head;
            while (temp->next != nullptr) {
                temp = temp->next;
            }
            temp->next = newNode;
        }
    }

    void deleteNode(Node *nodeToDelete) {
        if (head == nullptr) {
            return;
        }
        if (head == nodeToDelete) {
            head = head->next;
            delete nodeToDelete;
            return;
        }
        Node *temp = head;
        while (temp->next != nullptr && temp->next != nodeToDelete) {
            temp = temp->next;
        }
        if (temp->next == nullptr) {
            return;
        }
        temp->next = temp->next->next;
        delete nodeToDelete;
    }

    void traverse() {
        Node *temp = head;
        while (temp != nullptr) {
            temp = temp->next;
        }
    }
};

class Cart {
private:
    LinkedList productList;

public:
    Cart() {
    }

    void addProduct(Node *newNode) {
        productList.addNode(newNode);
    }

    void removeProduct(Node *nodeToDelete) {
        productList.deleteNode(nodeToDelete);
    }

    void viewCart() {
        productList.traverse();
    }

    void generateBill() {
    }

    void displayBill() {
    }
};

int main() {
  
    return 0;
}
